apply plugin: 'com.android.application'
// 密钥
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
// 加载keystore.properties到项目中
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

static def buildTime() {// 定义一个打包时间
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion build_versions.target_sdk
    defaultConfig {
        applicationId "com.moving.keep.sparrow"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        //打包时间
        resValue "string", "build_time", buildTime()
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            //更改AndroidManifest.xml中预先定义好占位符信息
            //manifestPlaceholders = [app_icon: "@drawable/icon"]
            // 不显示Log
            buildConfigField "boolean", "LEO_DEBUG", "false"
            minifyEnabled true//是否进行混淆
            shrinkResources true//是否清理无用资源,依赖于minifyEnabled
            zipAlignEnabled true//是否启用zipAlign压缩
            //混淆文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release//配置签名文件
        }
        debug {
            applicationIdSuffix ".debug" //给applicationId添加后缀“.debug”
            //manifestPlaceholders = [app_icon: "@drawable/launch_beta"]
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false//是否进行混淆
            shrinkResources false//是否清理无用资源,依赖于minifyEnabled
            zipAlignEnabled false//是否启用zipAlign压缩
            // 混淆文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release//配置签名文件
            debuggable true
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation deps.support.multidex
    implementation project(':baselib')
    
    if (!isModuleRun.toBoolean()) {
        implementation project(':module_main')
        implementation project(':module_one')
    }
}
